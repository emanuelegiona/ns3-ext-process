# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# Dependencies: Boost::asio (header), Boost::system (library)
REQUIRED_BOOST_LIBS = ['system']

def required_boost_libs(conf):
    conf.env['REQUIRED_BOOST_LIBS'] += REQUIRED_BOOST_LIBS

def configure(conf):
    if conf.missing_boost_libs('ext-process', 'ExternalProcess module', REQUIRED_BOOST_LIBS):
        return

def build(bld):
    module = bld.create_ns3_module('ext-process', ['core'])
    module.source = [
        'model/ext-process.cc',
        ]

    module_test = bld.create_ns3_module_test_library('ext-process')
    module_test.source = [
        'test/ext-process-test-suite.cc'
        ]
    # Tests encapsulating example programs should be listed here
    if (bld.env['ENABLE_EXAMPLES']):
        module_test.source.extend([
        #    No tests
             ])

    headers = bld(features='ns3header')
    headers.module = 'ext-process'
    headers.source = [
        'model/ext-process.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        # bld.recurse('examples')
        pass

    # Dependencies: Boost::asio (header), Boost::system (library)
    module.use.append('BOOST')

    # bld.ns3_python_bindings()

